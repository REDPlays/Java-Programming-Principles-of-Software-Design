#BlueJ class context
comment0.target=EfficientMarkovWord
comment0.text=\r\n\ Write\ a\ description\ of\ EfficientMarkovWord\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=order
comment1.target=EfficientMarkovWord(int)
comment2.params=seed
comment2.target=void\ setRandom(int)
comment3.params=text
comment3.target=void\ setTraining(java.lang.String)
comment4.params=words\ target\ start
comment4.target=int\ indexOf(java.lang.String[],\ WordGram,\ int)
comment4.text=\r\n\ Looks\ for\ the\ first\ position\ from\ start\ that\ has\ words\ in\ the\ array\ words\ \r\n\ that\ match\ the\ WordGram\ target.\ If\ no\ match\ is\ found,\ returns\ -1.\r\n
comment5.params=kGram
comment5.target=java.util.ArrayList\ getFollows(WordGram)
comment5.text=\r\n\ Returns\ an\ ArrayList\ of\ all\ the\ single\ words\ that\ immediately\ follow\ an\r\n\ instance\ of\ the\ WordGram\ parameter\ somewhere\ in\ the\ training\ text\r\n
comment6.params=numWords
comment6.target=java.lang.String\ getRandomText(int)
comment6.text=\r\n\ Generates\ and\ returns\ random\ text\ that\ has\ numWords\ words.\ Generates\ each\ word\ by\ \r\n\ randomly\ choosing\ a\ word\ from\ the\ training\ text\ that\ follows\ the\ current\ word(s)\ \r\n\ in\ the\ training\ text.\r\n
comment7.params=
comment7.target=void\ buildHashMap()
comment8.params=
comment8.target=void\ printHashMapInfo()
numComments=9
